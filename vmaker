#!/bin/bash

# Function to create a new project
create_blank_project() {

    folder_name=".devcontainer"

    # Check if the folder already exists
    if [ -d "$folder_name" ]; then
        echo "Folder '$folder_name' already exists in the current directory."
    else
        # Create the folder
        mkdir "$folder_name"
        echo "Folder '$folder_name' created successfully."

        # Create a default.json file inside the folder
        touch "$folder_name/devcontainer.json"
        echo "devcontainer.json created successfully."
    fi
}

# Function to create a blank Dockerfile
create_blank_dockerfile() {

    folder_name=".devcontainer"

    # Check if the folder already exists
    if [ -d "$folder_name/Dockerfile" ]; then
        echo "Folder '$folder_name' already exists in the current directory."
    else
        # Create a Dockerfile inside the folder
        touch "$folder_name/Dockerfile"
        echo "Dockerfile created successfully."
    fi

}

# Function to create a blank docker-compose.yml
create_blank_compose() {

    folder_name=".devcontainer"

    # Check if the folder already exists
    if [ -d "$folder_name/docker-compose.yml" ]; then
        echo "Folder '$folder_name' already exists in the current directory."
    else
        # Create a Dockerfile inside the folder
        touch "$folder_name/docker-compose.yml"
        echo "Compose file created successfully."
    fi

}

# Function to create a laravel project
create_laravel_project() {
    create_blank_project
    create_blank_dockerfile
    create_blank_compose

     # Get the directory containing this script
    SCRIPT_DIR="$(dirname "$0")"

    # Assuming the stubs directory is located alongside the script
    STUBS_DIR="$SCRIPT_DIR/.stubs"
    

    envsubst < "$STUBS_DIR/devcontainer/_laravel.stub" > "$DIR/.devcontainer/devcontainer.json"
    unset DIR
}

# Get the current directory
current_path=$(pwd)

# Print the current directory
echo "Current directory: $current_path"

# Extract the last component of the current directory path (the directory name)
current_dir=$(basename "$current_path")

# Print the directory name
echo "Current directory name: $current_dir"

DIR=$project_name
export DIR

# Interactive menu
PS3="Select an option: "
options=("Create a Blank Project" "Create Laravel Project" "Create NextJs Project" "Quit")

select opt in "${options[@]}"; do
    case $REPLY in
        1) create_blank_project ;;
        2) create_laravel_project ;;
        3) create_nextjs_container ;;
        4) echo "Exiting..."; exit ;;
        *) echo "Invalid option. Please select again." ;;
    esac
done